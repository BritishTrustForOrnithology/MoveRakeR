% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_leaflet_trips.R
\name{plot_leaflet_trips}
\alias{plot_leaflet_trips}
\title{Interactive leaflet map for visualising trips of animals}
\usage{
plot_leaflet_trips(
  data,
  TagID = NULL,
  gap = 8 * 60 * 60,
  gap_tol = 0.4,
  plotby = NULL,
  col = NULL,
  trips = NULL,
  shapes = NULL,
  points = NULL,
  radius = 4
)
}
\arguments{
\item{data}{A \code{Track} or \code{TrackStack} object; note \code{TrackMultiStack} objects not currently handled.}

\item{TagID}{Option for a concatenated list of TagID numbers to be subsetted from the data.}

\item{plotby}{A character string that must match a desired column name in the Track-family
object data, indicating how to label points across all animals. If NULL (default), this i
bypassed and colouring of points is done by TagID and a colour palette.}

\item{col}{A vector of colours than can be hard-coded in this argument for plotting; if
"col" is not equal to the length of the factor levels of plotting in argument "plotby", then an error
is returned; if "plotby" is NULL and "col" is also NULL, then an automatic colour palette is used for TagID.}

\item{trips}{A \code{Trip} or \code{TripStack} object (note \code{TripMultStack}) objects not currently handled.
This is a dataset output from the function \code{trip_stats} function that should be run in the R session first
to be fed into this argument. If NULL, then the trip stats are bypassed and only one tab (a leaflet visualisation) is
returned in the Shiny output. If trips is not NULL in this argument, then three additional summary tabs
are returned (see below).}

\item{shapes}{Option to add shapes to the leaflet map, as a \code{sf} POLYGON or MULTIPOLGON geometry object.
Defaults to NULL. This must be specified as list(shape1, shape2, etc), including  for single
shapes too, i.e. list(shape1).}

\item{points}{A \code{data.frame} of \emph{additional} xy points to be plotted on the map, i.e. this does
not mean whether to plot the animal telemetry points, but if separate points of another sort are needed (e.g. wind turbine locations.}

\item{radius}{Numeric integer of the radius of the points to plot, defaulting to 4. Note, limited
flexibility is currently available for colours of points using \code{leaflet::colorFactor} and lines (grey).}
}
\value{
A local browser window with the Shiny app deployed.
}
\description{
An Shiny R interactive map to view trips of animals, with some basic summaries and plots based on
the \code{leaflet} R package.
}
\details{
Function \code{plot_leaflet_trips} is aimed at providing visual summaries of telemetry
data after "trips" having been identified in the data, for example through function \code{define_trips}.
The function uses the JavaScript \code{leaflet} R package to plot base map tiles of OSM, Google Earth and ESRI,
over which movements of animals are overlain. It is hoped that this interactive experience will
serve both initial data checking and further investigating potential patterns in the data.

To avoid complications with coding classes, \code{plot_leaflet_trips} is only available for the Track-family
of classes. So any \code{tibble::tibble} outputs if that's the way data were processed up to this
function, then use the conversion to the \code{Track} class before feeding into this function. The same
is also true for generation of trip statistics, so before to convert to the \code{Trip} class before
using \code{plot_leaflet_trips}. Since this current function is likely dealing with multiple animals
it is assumed the user would not ever want to use \code{plot_leaflet_trips} with the \code{Track2}
class directed at lapplying functions in open session base R.

Up to six tabs are currently available in the output. First, \strong{"Leaflet visualisation"} is the geographic
view of the data for animals selected, with interaction available for selecting individual
animals, and individual trips via their trip ID "tripNo"; a timeslide is also provided; trip
numbers per animal are dynamically updated for the selected animal. Animals can only
be selected in the leaflet plotting tab, with other tabs subsequently updating accordingly. The time slider, however,
only works if "All" trips are selected to simplify the dynamic reactivity.
If a bird's trip No is selected, and then another TagID is chosen in the other drop-down box, that doesn't have that same corresponding tripNo,
then the selection reverts to "All" for the next bird chosen to avoid crashes. A tab named
\strong{"Data spans"} is always given regardless of \code{trips == NULL}; this tab provides a \code{DT::datatable}
of "TagID", "start", "end" for basic information of start and end dates of the animal's
deployment, and "dur.days","dur.days.mon" for the total time span studied (end minus start), and
the total period within that span where the tag was considered "actively" monitoring, based on selections
of gapsections in \code{clean_GPS} or \code{gapsection}; the function \code{tabulate_history} is used
for this purpose, and can be run as a standalone function outside this routine. A further tab
\strong{"Likely sampling rates"} uses another function \code{assign_rates} to produce a tabulation of
most likely sampling rates of animals, using hard-coded choices between 10s and 5 hours+.

If \code{trips != NULL}, then three further tabs also returned with more information on the metrics of individual trips. The
tab \strong{"Trip details"} gives the key trip metrics of all individual trips of the animal selected,
and if tripNos are also selected in the first tab, then only that trip is given in the second
tab, allowing the user to identify trips by eye, and immediately see their linked statistics.
Should trips not be equal to NULL, then a tab of \strong{"Trip metric distributions"} is returned
visualising some simple plots of histograms of the individual bird's trip duration alongside
all birds, further regression of trip duration and maximum distance per trip, and trip
duration plotted over DateTime. More could be added here so this is a work in progress. The
final tab \strong{"Trip stats"} then summarises the metrics across all trips for individual animals, using the function
\code{tabulate_trips}, as can also be used in open code. For bird-level information in tables,
choices selected in the leaflet map carry through to yellow highlights of that individual in
the other linked tables. Note \code{plot_leaflet_trips} works animal by animal and doesn't
view all animals together on a plot - see the simpler \code{plot_leaflet} function for that.

It is anticipated this app will be updated to make use of R Shiny Bootstrap.
}
\examples{

# I could keep going with this leaflet function, as it's possible to add other things!
# In particular, as can be done in MoveBank, selecting a point for deletion if it's deemed
# visually incorrect slipped through the speed filtering in earlier steps.

# as always read in initial data, here, using an example at Havergate 2020 for lesser black-backed gulls
p4 <- 32631
indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
indata <- Track(indata) # optional to convert to in-house class (most functions will still run on non track data but generic S3 methods will not be available for plot and summary)

data_in <- indata \%>\% clean_GPS(.,speedfilt = TRUE, drop = FALSE) \%>\%
  define_trips(method="rect", lls = c(-3.2, 54.0553,-3.1689, 54.0437), p4s = p4)

# get trip summary
trips <- trip_stats(data_in, nestfile = NULL, nest_lls=NULL, use_shape = FALSE)

# Can now plot the data interactively - simple example for a subset of four birds, no trips selected
plot_leaflet_trips(data = data_in, trips = trips)

# or without the trips, the extra tabs will not load
plot_leaflet_trips(data = data_in)

# A full example, trip metrics and additional shapes and points of wind farms (NOT RUN)
# plot_leaflet_trips(data = data_in,  trips = data_trips, shapes = sf_shape, points = sf_points)

# (note, individual TagIDs can be selected in the function too via TagID argument, to screen out birds not wanting shown)

#### END ###

}
\references{
Cheng, J., Karambelkar, B. & Xie, Y. (2019). leaflet: Create Interactive Web Maps with the JavaScript
Leaflet' Library. R package version 2.0.3. \url{https://CRAN.R-project.org/package=leaflet}
}
\seealso{
\link{plot_leaflet}, \link{tabulate_trips}, \link{tabulate_history}, \link{assign_rates}
}
