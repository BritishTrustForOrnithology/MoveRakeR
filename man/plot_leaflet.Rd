% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_leaflet.R
\name{plot_leaflet}
\alias{plot_leaflet}
\title{Interactive leaflet map for visualising tracking data}
\usage{
plot_leaflet(
  data,
  TagID = NULL,
  ud = NULL,
  plotby = NULL,
  col = NULL,
  plot_w = "100\%",
  plot_h = 600,
  shapes = NULL,
  pcol = "black",
  scol = "black",
  points = NULL,
  radius = 4,
  legend = TRUE,
  lines4fixes = TRUE,
  fixes = TRUE
)
}
\arguments{
\item{data}{A \code{Track} or \code{TrackStack} object; note TrackMultiStack objects not currently handled.}

\item{TagID}{Whether to subset TagIDs for the data fed in. It is advisable to
consider this for large datasets, or reduce the time span of the data used, as very large
numbers of points are not well handled. TagID should be a concatenated vector.}

\item{ud}{for plotting KDEs on the map; additional toggle will appear in the shiny app for individuals.
However, please note, this is not currently available in \code{MoveRakeR} as the
a separate function not currently coded in the package \code{compute_vertices} is also needed that uses the
"estUD" classes of individual animals output from the \code{adehabitatHR::kernelUD} workflow; get in touch
if interested. Function \code{compute_vertices} creates a vertices class
of contours from the UD that can then be plotted on the leaflet map through the UD argument in
\code{plot_leaflet}.}

\item{plotby}{A character string that must match a desired column name in the Track-family
object data, indicating how to label points across all animals. If NULL (default), this i
bypassed and colouring of points is done by TagID and a colour palette.}

\item{col}{A vector of colours than can be hard-coded in this argument for plotting; if
"col" is not equal to the length of the factor levels of plotting in argument "plotby", then an error
is returned; if "plotby" is NULL and "col" is also NULL, then an automatic colour palette is used for TagID.}

\item{plot_w}{Value for plotting width of leaflet device.}

\item{plot_h}{Value for plotting height of leaflet device.}

\item{shapes}{Option to add shapes to the leaflet map, as a \code{sf} POLYGON or MULTIPOLGON geometry object.
Defaults to NULL. This must be specified as list(shape1, shape2, ...), including  for single
shapes too, i.e. list(shape1).}

\item{pcol}{A colour for which to plot the additional points added to the map, defaulting to "black".}

\item{scol}{A colour for which to plot the additional polygon outlines added to the map, defaulting to "black". Note
currently shape fills are not coded.}

\item{points}{Option to add additional points to the map, as with the shapes argument, should
be specified as a list even if just one set of points. The function expects "latitude" and "longitude" columns
in the input points argument per layer, each specified as a data.frame object, but the function
automatically converts text of the column names to lower case.}

\item{radius}{Numeric integer of the radius of the points to plot, defaulting to 4.}

\item{legend}{Logical defaulting to TRUE as to whether a legend is to be displayed for telemetry point classifications.}

\item{lines4fixes}{Another logical argument as to whether to draw the lines between fixes, defaults to TRUE.
Ideally this should be another button in the shiny app to toggle but it is not yet implemented that way.}

\item{fixes}{Another logical as to displaying options, TRUE/FALSE, for the telemetry fixes, defaulting to TRUE.}
}
\description{
\code{plot_leaflet} subsets a Track or TrackStack object for TagIDs and feeds this through to
a ui and server plotting an interactive shiny app.
}
\details{
The map works using R's Shiny App utilities, an makes use of efficient processing to update
the base map rather than plotting afresh and as a preferCanvas option to increase speed.
However, the function is still slow for lots of data. Three different basemaps are
also implemented being GoogleEarth, OSM and ESRI. Note, currently no saving still grabs
of images are coded. The plot appears in a tab in the shiny app, and more tabs are planned
to summarise the the data etc in other views. Points of multiple birds are also coloured
automatically using a simple colour palette, but no custom coloration is yet coded. A save
option is also now available beneath the leaflet map so the user can take a snapshot of the
map to be saved to the global working directory as in \code{getwd()}.

To avoid complications with coding classes, \code{plot_leaflet} is only available for the Track-family
of classes. So any \code{tibble::tibble} outputs if that's the way data were processed up to this
function, then use the conversion to the \code{Track} class before feeding into this function.

# NOTE: It is anticipated this app will be updated to make use of R Shiny Bootstrap.
}
\examples{

indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
data <- Track(indata) # optional to convert to in-house class (most functions will still run on non track data but generic S3 methods will not be available for plot and summary)

plot_leaflet(data)

# Note there are also options to bring in UDs and vertices drawn as polygons but these are
# at the moment under development in MoveRakeR, and involve code currently not publicly available

p4s = 32631
k_prep = kernelUD_prep(data, p4s = p4s)
xy <- kernelUD_grid(data = data,  Choice=20, res=500, ADJVAL = 20000, p4s = p4s)
UD <- adehabitatHR::kernelUD(k_prep, h = "href", grid=xy, same4all = FALSE, kern = "bivnorm")
vers <- compute_vertices(ud = UD, vertices = c(95,75,50), geo_transform = TRUE)
plot_leaflet(data, shapes = list(ukmap), ud = vers, radius = 1, col = "black", legend = TRUE)

}
\references{
Cheng, J., Karambelkar, B. & Xie, Y. (2019). leaflet: Create Interactive Web Maps with the JavaScript
Leaflet' Library. R package version 2.0.3. \url{https://CRAN.R-project.org/package=leaflet}
}
\seealso{
@seealso \link{plot_leaflet_trips}
}
