% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tag_timeline.R
\name{tag_timeline}
\alias{tag_timeline}
\title{Determine the general temporal tracking window of animals}
\usage{
tag_timeline(
  data,
  plot = FALSE,
  return_plot = TRUE,
  overlaps = TRUE,
  active_thresh = 0.5,
  alone_thresh = 0.5,
  miss_thresh = 0.25,
  msg_col = 34,
  max_show = 3,
  date_breaks = "6 month",
  messages = TRUE
)
}
\arguments{
\item{data}{Input data object, with required columns: TagID, DateTime, longitude, latitude.}

\item{plot}{A TRUE/FALSE (defaulting to FALSE) whether to plot a ggplot visualisation of daily tracking
intensity upon function completion.}

\item{return_plot}{A TRUE/FALSE (defaulting to TRUE) as to whether to return the ggplot visualisation of daily tracking
intensity, regardless of whether the user wanted it plotted to the R session on function completion. If TRUE,
the plot is given in the returned object: attr(, "plot").}

\item{overlaps}{A TRUE/FALSE whether to compute overlap data between individual animals, defaults to TRUE.}

\item{active_thresh}{a continuous numeric value between 0 and 1 used to quantify which animals were present when
less than (active_thresh*100)\% of other animals were active.}

\item{alone_thresh}{a continuous numeric vallue between 0 1nd 1 used quantify which animals had more
than (alone_thresh*100)\% time tracked alone.}

\item{miss_thresh}{a continuous numeric value between 0 and 1 to determine which animals had more
than (miss_thresh*100)\% days with missing data.}

\item{msg_col}{A numeric value for the colour to be used in console graphics.
The colour of the print out in the console, depending on your taste and whether black or white backgrounds
are currently being used within R Studio. Defaults to 34 (blue).}

\item{max_show}{The maximum number of individual animals to show in the messaging print out.}

\item{date_breaks}{The x value DateTime tick mark breaks to be used in the ggplot for \emph{plot}, defaulting to "6 month".}

\item{messages}{Whether printed console messages are to be returned to the user, a Boolean defaulting to TRUE.}
}
\value{
The returned data, other than the messaging to the console, is as a single data.frame
that contains the following information:
\itemize{
\item mean_overlap = for each bird, the average number of other birds that were active on the days that bird had GPS data;
\item sd_overlap = the sd of the number of other birds present on the days that the bird had GPS data;
\item min_overlap = minimum number of other birds active on any given day (e.g. if any time alone, will be zero);
\item max_overlap = maximum number of other birds active on any given day;
\item mean_prop_birds_active = mean (across all days where the animal had active GPS data) of the the proportion of other birds active on a given day / total number of other birds that could have been active (i.e. total number fed into dataset - 1);
\item sd_prop_birds_active = SD of above;
\item sum_alone = total number of days where the animal was alone with no other birds contributing data;
\item mean_prop_alone = the mean proportion of days where the animal was active but no others were (the fraction of days that a bird was active but had no other birds active at the same time);
\item sd_prop_alone = the sd proportion of days where the animal was active but no others were;
\item sum_n_days_active = the total number of days of the animal that had data;
\item sum_n_tot = the total tracking duration of the animal;
\item sum_prop_missing_days = the proportion of sum_n_days_active / sum_n_tot.
}

If a bird never overlapped with any other birds on any of its active days, then it would be a mean_overlap
of zero and mean_prop_birds_active score of 1.
}
\description{
A summary of temporal overlaps and intensity of tracking across animals within data object
}
\details{
The function \code{tag_timeline} assesses the time span of individual animals and the overlaps with others
in the dataset. The messaging output gives an indication to the user as to the extent of tracking
intensity through time across animals and any animals that have the least or most overlap with others.
The function also flags missing data through days without GPS data. The \code{tag_timeline} works by assessing
the proportion of days at different proportional thresholds for reporting.
These are:
\itemize{
\item (1) The active threshold, \emph{active_thresh}, to quantify animals present when less than (active_thresh*100)\% of other animals are active;
\item (2) The alone threshold, \emph{alone_thresh}, for animals that had more than (alone_thresh*100)\% time tracked alone; and
\item (3) The missing threshold, \emph{miss_thresh}, for animals that had more than (miss_thresh*100)\% days with missing data.
}

Note however this is a coarse visual and broad assessment and so will not pick up on finer-scale intermittent data.
For example if one single fix was collected on three consecutive days, but the tag was meant to be at
five minutes, the function would still treat that as having presence data on those days.
Therefore this function should be used with caution should such intermittent issues occur. This function is therefore
of more use for longer tracking durations for GPS data collected as intended for bursts but that could have had
gaps spanning more than a day.

Further, \code{tag_timeline} works on the scale of days and assumes that GPS sampling rates
are less than one day; this is to enable a unit over which to count and compute temporal density. This
could be updated in the future but for now any data that are collected at rates such as once every two+ days
will not be suitable for this function.
}
\examples{

indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
data <- Track(indata)
res = tag_timeline(data,
    plot = FALSE,
    return_plot = TRUE,
    overlaps = TRUE,
    active_thresh = 0.5,
    alone_thresh = 0.5,
    miss_thresh = 0.25,
    msg_col = 34)

# grab the plot output
# example replacing plot defaults for x axis
attr(res, "plot") + scale_x_date(
  date_breaks = "1 year",
  date_labels = "\%Y"
)  + theme(
  axis.text.x = element_text(
    angle = 45,
    hjust = 1,
    vjust = 1
  )
)

## Also see
# library(ctmm)
# Plot the sampling intervals, e.g. of the 'gazelle' data
# dt.plot() # notrun

}
\seealso{
\link{rake}, \link{rake_outlie}, \link{tag_spans}
}
