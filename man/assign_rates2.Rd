% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_rates2.R
\name{assign_rates2}
\alias{assign_rates2}
\title{Provides a deeper dive into likely tag sampling rates}
\usage{
assign_rates2(
  data,
  by = NULL,
  split = FALSE,
  group_after_gap = FALSE,
  breaks = c(1, 60, 100, 300, 600, 900, 1200, 1800, 3600, 7200, 10800),
  tol = c(0, 0.5, rep(0.4, 2), rep(0.3, 5), rep(0.2, 2)),
  out = "summary",
  pctn_rate_thresh = 20,
  max_show = 3,
  version = c("extended", "original"),
  plot = FALSE,
  messages = TRUE,
  msg_col = 35,
  verbose = FALSE
)
}
\arguments{
\item{data}{Input data object, with required columns: TagID, DateTime, longitude, latitude.}

\item{by}{As in \code{assign_rates}: An optional by argument (default to NULL i.e. only assessing by TagID); can be entered as c(x,y,z)
for levels to be assessed in the data, e.g. by year (if year is selected and is not present in the data it
is automatically added); out="summary" reflects the by variable choice.}

\item{split}{As in \code{assign_rates}: logical defaulting to FALSE for whether a split tibble is returned by TagID and the other by variables.}

\item{group_after_gap}{As in \code{assign_rates}: logical defaulting to FALSE for whether to summarise over gapsections if supplied as a by variable.}

\item{breaks}{As in \code{assign_rates}: A vector of binned choices of potential rates: the default here is for 11 categories:
10, 120, 300, 600, 900, 1200, 1800, 3600, 7200 and 10800s, and the upper value beyond,
labelled as <max dt. This function operates independent of and gapsecs that may have been
chosen in \code{gap_section}, i.e. dts are assessed consecutively regardless of gaps, unless
supplied specifically within the by argument.}

\item{tol}{As in \code{assign_rates}: A vector of tolerances that are added to the breaks argument to account for
imperfect GPS sampling rates in data obtained; this is set to: c(0,0.5,rep(0.4,2),rep(0.3,5),rep(0.2,2)).
The tol argument can also be a single vector that is then applied equally to all break categories.}

\item{out}{As in \code{assign_rates}: By default the function outputs a \code{summary} count of fixes per TagID binned to the the
breaks chosen, and will result in a split tibble df per animal with start and end being the
breaks between subsequent categories and likely_rate = breaks. However, if out is \code{NULL}, then
the function will return the tibble with 'rate' added as a column to the data supplied.
The maximum category split will always be the maximum dt in the data with likely rate <max per animal.}

\item{pctn_rate_thresh}{The percentage value threshold above which assessment for data collection at coarser
or finer sampling rates is presented in the messaged outputs, e.g. For animal(s) X and Y: Z\% or more data was collected at coarser/finer rates of 'S' s.}

\item{max_show}{The maximum number of individual animals to show in the messaging print out.}

\item{version}{*** However, note no by options or split = TRUE are available for assign_rates2 if selecting the extended version option.}

\item{plot}{Boolean (defaults FALSE) whether an output graphic visually showing the proportional rate breakdown per animal
should be plotted on function completion. Note this graphic is stored in attributes attr(,"plot") of the extended function output regardless.}

\item{messages}{Whether printed console messages are to be returned to the user, a Boolean defaulting to TRUE.}

\item{msg_col}{A numeric value for the colour to be used in console graphics.
The colour of the print out in the console, depending on your taste and whether black or white backgrounds
are currently being used within R Studio. Defaults to 35 (pink).}

\item{verbose}{Logical argument if run-time messages are wanted.}
}
\value{
The outputs returned depend on the argument 'version', and are a list of two. The first list element
relates to the original \code{assign_rates} output, and the second relates to the 'extended' version
referring to further output from \code{assign_rates2}; this extended output is a list of three, and includes a fix rate count cross-
tabulation and percent amount of rates per animal, and an additional optional \code{ggplot2::geom_smooth} graphic
showing per animal the rates for a visual interpretation.
}
\description{
A deluxe version of \code{assign_rates} that provide richer summaries and visual representation
}
\details{
The function \code{assign_rates2} is a wrapper function for \code{assign_rates} that provides further
assessment of tag sampling rate summaries. #' One of the main reasons for developing this \code{assign_rates2} wrapper was to provide more detailed
messaging back to the user as to the features of the data regarding likely sampling rates.
In that regard, \code{assign_rates2} assesses which of the rates (supplied as
breaks in the data) are most represented across animals, and if some animals were on different rates
the function summarises which animals had >x\% (\emph{pctn_rate_thresh}) at those coarser rates. The findings
are given as a messaged print in the R console. Similarly, other features of the data are described, including
had either of their top two rates greater than \emph{pctn_rate_thresh} at likely coarser rates.

Further, a quick assessment is made as to whether time steps between GPS fixes were detected beyond the maximum
likely rate as given under the \emph{breaks} argument, and thus inform if gaps may be present. This
also flags up if any animals that had greatest percentage of fixes above the max rate. \code{assign_rates2}
does not annotate the data but provides summaries; \code{assign_rates} should still be used for annotating the
original data with likely expected GPS sampling rates. \code{assign_rates2} is called from \code{rake}
as part of assessment 'rake' through the potential sources of error.

The \code{assign_rates} and \code{assign_rates2} functions are both less relevant evaluations if you already know the
sampling rate tags were set to, and when any temporal switches in rates for individual animals in settings occurred.
}
\examples{
indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
data <- Track(indata) # optional to convert to in-house class (most functions will still run on non track data but generic S3 methods will not be available for plot and summary)

data_with_rates = assign_rates2(data,
  by = NULL,
  split = FALSE,
  group_after_gap = FALSE,
  breaks = c(1, 60, 100, 300, 600, 900, 1200, 1800, 3600, 7200, 10800),
  tol = c(0,0.5,rep(0.4,2),rep(0.3,5),rep(0.2,2)),
  out = "summary",
  # extra assign_rates2 things
  pctn_rate_thresh = 20,
  max_show = 3,
  version = "extended",
  plot = FALSE,
  messages = TRUE,
  msg_col = 35,
  verbose=FALSE)

data_with_rates[[2]]
attr(data_with_rates[[2]],"plot") # the extended list slot [[2]] has the plot attribute, even if plot = FALSE

# if the "original" version was selected, data_with_rates[[1]] would contain assign_rates original output.

}
\seealso{
\link{assign_rates}, \link{clean_GPS}, \link{rake}
}
