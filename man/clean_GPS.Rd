% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_GPS.R
\name{clean_GPS}
\alias{clean_GPS}
\alias{get_attributes}
\alias{give_attributes}
\title{Cleaning the tracking data}
\usage{
clean_GPS(
  data,
  drop_sats = 3,
  sp_thres = 50,
  pdop = 0,
  hdop = 0,
  GAP = 28800,
  tol = 0.2,
  attrib = TRUE,
  sat_check = TRUE,
  flt_switch = FALSE,
  speed_filt = TRUE,
  drop = FALSE,
  reproject = FALSE,
  verbose = TRUE,
  detailed_verbose = FALSE,
  p4s = 3035
)

get_attributes(data)

give_attributes(data, attr_list)
}
\arguments{
\item{data}{Input data object, with required columns: TagID, DateTime, longitude, latitude.}

\item{drop_sats}{Numeric integer value for the minimum number of GPS satellites to drop from the database.
Defaults to 3, meaning only 4 and above are retained in the data.}

\item{sp_thres}{Numeric value for the minimum threshold (m/s) to be used in the speed filter, which requires
inspection and will vary by species. This will depend on the sampling resolution
of your data. The function then uses a while loop to remove all points not
meeting the threshold level until all offending fixes are removed.}

\item{pdop}{Default is numeric 0 indicating do nothing, but if greater than zero, the function will
look for a column named pdop, gps.pdop (or gps_pdop) or PDOP and keep only data less than that value.}

\item{hdop}{Default is numeric 0 indicating do nothing, but if greater than zero, the function will
look for a column named hdop, gps.hdop (or gps_hdop) or HDOP and keep only data less than that value.}

\item{GAP}{Numeric integer in seconds. The function serves another use, that of labeling
sections of assumed continuous GPS recording for the individual animal.
The argument \code{GAP} here is the cut-off i.e. temporal hiatus between two
consecutive GPS fixes, which defaults to 28800 seconds (eight hours), although note, the tolerance parameter
will also be incorporated (see tol argument).
This is a subjective choice for the user, and will depend also on GPS sampling
resolution. \code{GAP} is also used to defined \strong{gapsections} in the data,
that are sequentially labelled and are used in many further function operations.
These are perhaps equivalent in name to \strong{bursts} as in other R packages.
Note, gap sections can also be defined after this function has been run using the seaprate
standalone function for this purpose: \code{\link{gap_section}}. Also note that in \code{clean_GPS}
gap sections (bursts) of fixes of length = 1 are by default EXCLUDED in the speed filter, as in \code{\link{gap_section}}
can be dropped to retain \emph{only} consecutive fixes via the \code{GAP} criteria. If a precise GAP is needed with no tolerance,
set tol to 0. Units are in seconds.}

\item{tol}{A tolerance is also applied to the GAP value, useful for example to give lee-way around
the gap criteria relating to imprecision of sampling rate in GPS deviating from the initial rate specified.
By default this is set as 0.2, i.e. to give a true value used in delineation as: GAP +/- (GAP*0.2) s}

\item{attrib}{Logical set to FALSE if detailed attributes should be attached to each
data.frame per bird for numbers of fixes removed in various stages from \code{clean_GPS}.
These can be accessed afterwards using: attr(data, "data_summary"), where data for Track-family
objects is the individual "Track" data.frame per animal.}

\item{sat_check}{Logical whether to filter data for satellite count, defaults to TRUE, and if TRUE,
the data needs a column called "satellite_used".}

\item{flt_switch}{logical argument, whether to exclude
MoveBank data erroneous flt_switch values. Warning though this can remove fixes erroneously if not careful
so it is suggested if not sure to look at Movebank directly and do this separately. This is set to
FALSE by default i.e. no flt_switch filtering done.}

\item{speed_filt}{logical defaulting to TRUE as to whether to use the speed filter in the cleaning steps.
Due to potential differences in how users may want to apply this cleaning process, they may want
to e.g. to their own cleaning, such as using instantaneous speed instead. In which case, \code{clean_GPS}
can be used to ONLY remove satellites and do flt_switch filtering. Further cleaning such as
using accuracy of positions, altitude requires bespoke manipulation beyond the scope here.}

\item{drop}{logical defaults to FALSE, but user can specify TRUE to retain single gapsections
that by default get removed from the speed filter as isolated fixes that are at too coarser rate
as determined by the \code{GAP} argument}

\item{reproject}{As above, a logical value whether or not to reproject lat-long WGS84
coordinates to the new desired projection as specified via, \code{p4s}.}

\item{verbose}{Logical argument if runtime messages are wanted}

\item{detailed_verbose}{Logical argument if the very detailed process of the speed filtering
part of the function is required. Defaults to TRUE.}

\item{p4s}{The coordinate reference system projection, should it be needed, defaults to NW Europe epsg:3035.}
}
\value{
The function returns a tibble format with an additional \code{Track} class.
Additional columns in the objects are also returned:
including: \strong{dt}, time difference (secs) between consecutive GPS fixes,
\strong{gap}, a binary (1,0) for fixes where a gap was identified and \strong{gapsec}
as a numeric integer of sequentially-labelled gapsection strings of telemetry fixes.
}
\description{
\code{clean_GPS} is provided to allow some basic cleaning of the raw tracking data to be
carried out, i.e. after having read in the raw data using
\code{\link{read_track_UvA}} and/or \code{\link{read_track_MB}}. \code{clean_GPS} is used
to take out less certain positional fixes, filter out fixes associated with unrealistic trajectory speeds, and further
define date-time sections (strings of points) where tags were deemed have valid recording in relation to the programmed GPS sampling rate.
}
\details{
The single function \code{clean_GPS} is used to clean the data. There are of course many
reasons why (here focusing on GPS) animal-borne telemetry loations may have error, such as
internal firmware settings of tags e.g. connection parameters with satellites, sampling rate
of tags, number of satellites, satellites position in the sky, along with external factors
such as temperature, humidity etc. Here, we assume the user is mainly interested in 2D space,
so we retain all vertical information in columns \code{altitude} and \code{altitude_agl} - that's a story for another time.
Instead here, we carry out very basic cleaning to remove fixes that may be deemed less reliable
based on a minimum number of acceptable satellites used for the fix, and for Movebank data, removing inaccurate \code{flt_switch} values.
Finally the function includes a trajectory (ground) speed filter based on distance traveled divided by time taken
between consecutive fixes to remove points that are more than an
unrealistic threshold for the species, that may not have been picked up in the other filters.
This also depends on \code{adehabitatLT::as.ltraj}
for efficiently computing distance for trajectory speed estimation
in the speed filter. Ground speeds will of course vary by species - so it may be best to view
them as a histogram - the default value is 50 m/s based on Lesser Black-backed Gulls,
which is actually still large. Ultimately this is a little subjective, and for analysis purposes, it could be argued that
all error should be retained, but this depends on the purpose of the analysis. This is up to the user's discretion. Also, using trajectory speed has drawbacks
when it comes to coarser GPS sampling rates sampling, making it harder to discern potentially erroneous
fixes in this way. Similarly at very fine spatio-temporal scales, i.e. with fast sampling
less than 60 seconds, a small change in GPS position has a much greater influence on trajectory speed
than for coarser sampling schedules. This can be solved by increasing the speed filter threshold value
but it may be better to investigate the error potential in traj_speed calculations at these finer scale
and the potential sensitivity of the data to such flat decisions. This relationship can be examined further
using the \code{tspeed_jit} function.

Further very simple options for removing fixes under a certain value of DOP (e.g. pdop, hdop) are provided
in the function. Again it is worth investigating the distributions of these variables more fully
and the relationship they may have with error in the horizontal dimension. It is also worth noting that in the speed filter, the filter stages happen sequentially, i.e. removing
number of satellites and flt_switch values (for Movebank) and then applying the speed filter.
So the trajectory speed is recalculated.

on a more detailed note, the speed filter was initially coded in a 'forwards' direction in DateTime
and so the fix after the current one was always 'blamed' for being incorrect. This may not always
be the case for data where there are many gapsections defined, i.e. where there is a greater chance the
first fix in a string could be the one incorrect. So in the current version, both forwards and backward checks are made to
pick up this issue and correctly identify the errant fix in a string - less of an issue for continuous non gappy data.
}
\examples{

## We can use the dplyr \%>\% notation if we wanted to directly with Track objects
indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
data <- Track(indata) # optional to convert to in-house class (most functions will still run on non track data but generic S3 methods will not be available for plot and summary)
data <- data \%>\% clean_GPS() # accepting the defaults of the clean_GPS function

# this also gives warnings that some satellite count data are found to be NA
# and so these data are retained in the filter of number of satellites.

# dropping data with 3 satellites, a speed threshold of 50 m/s and labelling gaps in data at 28800 s
# with no consideration of hdop or pdop set to 0 for no filtering
data = clean_GPS(data, drop_sats = 3, sp_thres = 50, GAP = 28800)

# check out where fixes where dropped:
attr(data,"data_summary")

## summarise the data, using a further function summary
#summary(data)

}
\seealso{
\link{clean_GPS}, \link{gap_section}, \link{sub_samp}

\link{read_track_MB}, \link{tspeed_jit}, \link{read_track_UvA}, \link{gap_section}, \link{summary}
}
