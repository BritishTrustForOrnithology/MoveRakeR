% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/move2Track.R
\name{move2Track}
\alias{move2Track}
\title{Convert a downloaded Movebank .csv to a Track format}
\usage{
move2Track(
  data,
  TagID = NULL,
  start = NULL,
  end = NULL,
  TagID_drop = TRUE,
  dropsat = FALSE,
  dropsats = 3,
  flt_switch = TRUE,
  mindata = 5,
  p4s = 3035,
  verbose = TRUE
)
}
\arguments{
\item{data}{The input .csv downloaded from Movebank in standard format.}

\item{TagID}{The individual tag identifier from the Movebank .csv, defaults to NULL
thus retaining all data from the .csv.}

\item{start}{The start time to delineate subsets of the total data for the individual
in UTC.}

\item{end}{The end time to delineate subsets of the total data for the individual in UTC.
The start and end times are ideally given in the format "2014-06-25 15:20:23" but the
internal MoveRakeR function \code{datetime} is used to accept "/" and dd/mm/YY two, or
four length years (YY, YYYY) as well.
#' Arguments \emph{start} and \emph{end} default to NULL, reading in the entire track
of the animal and must be given in' \emph{character()} format, which are then converted to
\code{base::POSIXct} format within the \code{read_track_MB} function. Functionality is also
available for situations where only one or other of start and end need to be specified,
with the the other defaulting to NULL. Multiple periods per TagID are also permitted.}

\item{dropsat}{Logical defaults to FALSE. This indicates whether to drop GPS fixes with satellites below
the \emph{dropsats} threshold. It is suggested the user do not change these
from FALSE but instead use the function \code{\link{clean_GPS}}.}

\item{dropsats}{Numeric value indicating a threshold for satellite retention.}

\item{flt_switch}{logical argument, set to FALSE whether to retain
Movebank data erroneous flt_switch values, instead being dealt with in the
\code{\link{clean_GPS}} function.}

\item{mindata}{This specifies a minimum number of rows of data for the individual
to be retained and is a form of cleaning, but here is retained to exclude reading
in data from animals with too few data deemed unusable for analysis.
Defaults to mindata = 5. It can of course be set to zero if a completely raw dataset.}

\item{p4s}{The coordinate reference system number defaulting to epsg:3035.
The lat-longs extracted from the Movebank database will be projected via this CRS and stored in two new columns
\emph{X} and \emph{Y} (note capitilisation). Note however, that further functions
give options to change this if you wish in due course, and the user of course do all point-level manipulation
outside the functions if they so wish anyway.}

\item{verbose}{logical (default TRUE) for whether detailed messaging is required.}
}
\value{
As with \code{read_Track_MB}, the final data outputted for individual animals is a \code{Track and data.frame} object of 29 variables for each
TagID; Type, TagID, DateTime, speed_2d, speed_3d, traj.speed, latitude, longitude,
X, Y, dist, dt, satellites_used, gps_fixtime, gps.pdop, gps.hdop, altitude,
altitude_agl, h_accuracy, v_accuracy, pressure, temperature, x_speed, y_speed,
z_speed, speed_accuracy, direction, location and flt_switch. See \code{read_Track_MB} for more
details.
}
\description{
A function to convert a downloaded .csv file from Movebank to a \code{Track-family} object.
}
\details{
This function replicates code used within the \code{read_track_MB} and allows conversion of \code{move}
objects from Movebank accessed through \code{move}, through to a Track class within \code{MoveRakeR}.
}
\examples{

### NOT RUN

# Data downloaded from Movebank
in_dir <- "dir.path/"
data <- read.csv(paste0(in_dir,"data.csv"))

# Coerce one animal with two separate time sections to Track format
Trackdat <- Movebank2Track(data=data,
  start = c("2019-06-01 15:00:00","2020-02-01 01:00:00"),
  end = c("2019-09-30 23:59:59","2020-09-30 23:59:59"),
  TagID = c('1','2'))

# Or just one bird from the file
Trackdat <- Movebank2Track(data=data, TagID = c('1')) # replace with real TagIDs

# Or lots
Trackdat <- Movebank2Track(data=data,
  start = c("2019-05-20 15:30:20","2019-05-20 17:55:10","2020-05-07 16:03:45"),
  end = c("2019-09-30 23:59:59","2019-09-30 23:59:59","2020-05-11 09:51:10"),
  TagID = c('1','2','3'))

}
