% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Track2TrackMultiStack.R
\name{Track2TrackMultiStack}
\alias{Track2TrackMultiStack}
\alias{Track2TrackStack}
\alias{TrackStack2Track}
\alias{TrackMultiStack2TrackStack}
\alias{TrackMultiStack2Track}
\alias{TripMultiStack2Trip}
\alias{TripStack2Trip}
\alias{Trip2TripMultiStack}
\title{Conversions to and from MoveRakeR data classes}
\usage{
Track2TrackMultiStack(data, by = NULL, ord = "seq")

Track2TrackStack(data, by = NULL, ord = "seq")

TrackStack2Track(data)

TrackMultiStack2TrackStack(data, rename = TRUE, nm = "_stack_")

TrackMultiStack2Track(data, rename = TRUE, nm = "_stack_")

TripMultiStack2Trip(data, rename = TRUE, nm = "_stack_")

TripStack2Trip(data)

Trip2TripMultiStack(data, by = NULL, ord = "seq")
}
\arguments{
\item{data}{A \code{Track}, \code{TrackStack} or \code{TrackMultiStack} object, depending on the
conversion types to and from.}

\item{by}{A single vector for \code{Track2TrackStack} and a two length vector for
\code{Track2TrackMultiStack} denoting the name of the columns which to make the transposition.}

\item{ord}{Currently only "seq" is available as an option for ordering the levels in sequential
order for \code{Track2TrackMultiStack}, but bespoke ordering is possible for the \code{Track2TrackStack}
where \emph{ord} accepts a concatenated numeric vector denoting the order in which to place the
elements for the intended TrackStack outputted object.}

\item{rename}{logical defaulting to TRUE for if renaming using \code{nm} should be used.}

\item{nm}{Specific to TMS to TS and TMS to Track conversions, defaulting to "\emph{stack}" inserted for animal names
reflecting which stack they were combined from to higher level listing.}
}
\value{
A \code{Track}, \code{TrackStack} or \code{TrackMultiStack} depending on the function
and conversion choices.
}
\description{
It may be necessary to rework the structure of \code{Track}, \code{TrackStack} and \code{TrackMultiStack} objects,
or convert from one type to another aggregating across variables. For example plotting purposes,
or should the user have read in the data but then want to regroup structures by a column
in the data, such as incubation vs chick rearing in birds, or years etc, that is if the user
is interested in using base R operations. Importantly, however \code{MoveRakeR} encourages use of tidy approaches
and so makes use of \code{dplyr} and \code{tidyr}, with the grouping structure
essentially taking the place of the previous way of doing things in this R package that was
essentially applying functions over lists, hence the 'stacks' and 'multistacks'. These forms have been retained
though for now but may be deprecated in the future.
}
\details{
These functions provide flexibility to convert between base R listed forms for \code{Track}-family objects.
Function \code{Track2TrackStack} allows a TrackStack object to be built from a Track object using a variable to build each Track element.
\code{Track2TrackMultiStack} operates at the higher level and expects two named variables
to build both the listed elements of TrackStack objects and the variable to group multiple TrackStack objects.
Both these functions therefore need labelled columns in the Track object for the groupings.

Note, currently NOT implemented: TrackStack2TrackMultiStack
}
