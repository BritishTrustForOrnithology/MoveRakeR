% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/offshore.R
\name{offshore}
\alias{offshore}
\title{Add "offshore" marine distinction for GPS telemetry fixes}
\usage{
offshore(
  data,
  use_crs_shape = TRUE,
  plot = FALSE,
  crop = TRUE,
  buffer_extent = 10000,
  shape = NULL,
  verbose = TRUE,
  p4s = 3035
)
}
\arguments{
\item{data}{Input data object, with required columns: TagID, DateTime, longitude, latitude.}

\item{use_crs_shape}{logical defaulting to TRUE whether to use the projection of the shape provided for bird data, otherwise
the function will project both bird data and the shape using the p4s argument.}

\item{plot}{logical defaults to TRUE as to whether a plot should be returned for the method chosen.}

\item{crop}{logical defaults to TRUE for whether the maps used should be cropped first prior to overlaps
with offshore being assessed, speeding up processing.}

\item{buffer_extent}{A value to further add around the bird data to circumvent potential issues
of edges of the cropped map missing potential true land area; a default value is specified as 10000
but this will depend on map units and it is suggested this is checked before hand if using this option.}

\item{shape}{the function expects a single sf shape (sf MULTIPOLYGON or POLGON) representing the coastline.}

\item{verbose}{logical argument as to whether detailed information processing of the function
should be displayed, defaults to TRUE.}

\item{p4s}{The coordinate reference system projection (numeric) required for overlap processing, defaulting to BNG \code{epsg:3035}.}
}
\value{
The same dataset object as input with additional column
of integer 1 or 0 values labelling telemetry fixes as offshore or onshore.
}
\description{
Function \code{offshore} adds a label for each telemetry positional fix denoting whether the point
is deemed to be "offshore" or "inland" as a simple binary variable, with the distinction between
environments determined by shapefiles provided by the user.
}
\details{
Traditionally this process has been borne out of gull tracking work at BTO and the need to know
how far gull species such as Lesser Black-backed Gulls travel offshore. This is important for
species that span both terrestrial and offshore realms.

On the face of it, this is a simple GIS task. This function is provided purely for repeatability of process
and is concerned primarily with getting the initial shapefile correct with what we think 'marine'
represents, i.e. excluding terrestrial but also estuarine and river locations. However, it is up to the user to
determine an appropriate shapefile.

Offshore distinctions from \code{offshore} function can be used further in trip statistics, e.g.
how far a bird has travelled offshore per trip - see \code{trip_stats}, and also can be used together
with the \code{dist2coast} function, that as with offshore, adds an additional column for distance points
are to the UK/Ireland coastline, again as determined through specific shapes fed into that function.
}
\examples{

############### MAP PREPARATION ###############
# R packages not bundled with MoveRakeR
#remotes::install_github("ropensci/rnaturalearthhires")
#install.packages('rnaturalearth')
library(rnaturalearthhires)
library(rnaturalearth)

# https://digimap.edina.ac.uk/marine also useful

spdf_world <- ne_download(scale = 10, type = "countries")
Europe <- spdf_world[spdf_world$SUBREGION \%in\% c("Western Europe","Eastern Europe","Northern Europe","Southern Europe"),]
Europe_sf = st_crop(Europe, xmin = -25, ymin=32, xmax=35, ymax=70)
Europe_sf <- sf::st_transform(Europe_sf, 3035)
plot(Europe_sf$geometry)

# Note example with seabird colonies in mind, however, the resolution of ne maps does not extend small enough.
# This is just an example using open data
# It may be more sensible for example to use a bespoke shape and an isopleth e.g. 2 m to more
# accurately label non-estuarine / riverine locations as terrestrial onshore

# bird data, e.g.
data = data \%>\% clean_GPS(data) \%>\% offshore(use_crs_shape = TRUE, shape = Europe_sf, crop = TRUE, buffer_extent = 10000)

plot_leaflet(data)

}
\seealso{
\link{dist2coast}, \link{trip_stats}
}
