% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_Track.R
\name{summary.Track}
\alias{summary.Track}
\title{Summarise \code{Track}, \code{TrackStack} and \code{TrackMultiStack} class objects}
\usage{
\method{summary}{Track}(object, Simplify = TRUE, extra_vars = NULL, simple_view = TRUE)
}
\arguments{
\item{Simplify}{Logical defaulting to TRUE for whether to simplify the data to only
core data columns of: "TagID", "DateTime", "longitude", "latitude".}

\item{extra_vars}{for a concatenation of column names that should be retained in simplification
of the Track data, in addition to the core columns specified; not this argument is only relevant if
simplify = TRUE.}

\item{simple_view}{Logical (default = TRUE) for if just a simple table of fixes, datetime range,
number of fixes and long-lat range is required.}

\item{data}{A \code{Track}, \code{TrackStack}, or \code{TrackMultiStack} object.}
}
\value{
An object of class \code{TrackSummary}, \code{TrackSummaryStack} or \code{TrackSummaryMultiStack}, containing
\code{base::summary} information for all columns in the \code{Track} data.frame objects. Additional slots
of dimension of the data \code{dim_data}, number of animals, \code{animals}, years included for
animals, \code{years}, and specific TagIDs extracted, \code{TagIDs}.
}
\description{
A function using the S3 \code{summary} method for \code{Track-family} objects,
that gives a simple summary using \code{base::summary}.
}
\details{
\code{summary} was designed for easy indication as to whether data match
the user's expectation, such as upon read in from databases, or after manipulation stages,
e.g. checking the date ranges per animal are as expected if start and end times were specified in
\code{\link{read_track_MB}} and \code{\link{read_track_UvA}}.
NOTE: output from \code{summary} is to be incorporated in a shiny viewing of the data.
}
\examples{
indata <- yourdata # data.frame with a minimum of columns named TagID, DateTime, longitude, latitude
data <- Track(indata) # optional to convert to in-house class (most functions will still run on non track data but generic S3 methods will not be available for plot and summary)

summary(data)

}
