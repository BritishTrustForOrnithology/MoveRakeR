% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tspeed_jit.R
\name{tspeed_jit}
\alias{tspeed_jit}
\title{Assess trajectory speed error over sampling rate}
\usage{
tspeed_jit(
  data,
  nsim = 50,
  j = 5e-04,
  GAP = 28800,
  breaks = c(1, 5, 10, 20, 60, 100, 120, 300, 600, 900, 1200, 1800, 3600, 7200, 10800),
  tol = c(0, 0.5, 0.5, 0.5, 0.5, rep(0.4, 3), rep(0.3, 5), rep(0.2, 2)),
  verbose = TRUE
)
}
\arguments{
\item{data}{Input data object, of class \code{data.frame}, \code{tibble-family} or \code{data.table}, with required columns: TagID, DateTime, longitude, latitude}

\item{nsim}{The number of jitter simulations to run for the data, default is 50.}

\item{j}{This is the jitter value, which is simply a random selection made between -j and j,
via \code{runif(n = n(), min = -j, max = j)}. Larger j valules will thus sample from a wider normally-distributed spread of error.}

\item{GAP}{Currently specified as a default of 28000 s but as noted, this is a deprecated element and should not be worried bout in this function.
Larger dt values between fixes out to the upper bounds of the gaps in the data are discarded in this assessment.}

\item{breaks}{The threshold for binning the time between successive fixes ('dt') into easy-to-interpret segments; see the
\code{assign_rates} function for details.}

\item{tol}{The tolerance value around the spread of data to bin time between successive fixes ('dt') into; see
the \code{assign_rates} function for details.}

\item{verbose}{Logical should detailed trip counting be displayed, defaults to TRUE.}
}
\value{
The function outputs a simple data.frame of TagID, DateTime, dt, rate, sim, (sum number) sim_ (sim name, not needed really)
and value. Value is the difference in speed from the actual GPS trajectory speed to the jitter, for each point, having been
jittered randomly (normal distribution) bounded by the j argument.

The output also contains an additional summary of the mean, standard deviation and sample size per rate
as an additional attribute called 'summary', i.e. attr(data, "summary").
}
\description{
The function \code{tspeed_jit} can be used to understand the variance in trajectory speed over
varying GPS sampling rate to inform the speed trajectory threshold used in \code{clean_GPS}.
}
\details{
Within the \code{clean_GPS} function, a trajectory speed filter is used to
estimate likely erroneous GPS fixes consecutively in DateTime strings of points. Very large
speeds beyond that of the upper limit of travel speed of an animal would be more likely to be flagged
as inccorect. However, this filter is applied in a blanket fashion across all sampling rates that
may have been programmed for the tag used. With very small sampling rates, small deviation in the
GPS xy horizontal position could have a bigger impact on the the estimated trajectory speed
with it therefore being more likely erroneous fixes may be flagged even if the chosen speed filter
is beyond the maximum speed of an animal. This can be easily assessed through quantifying the error spread
of the trajectory speed around fixes set to different sampling rates. This is provided in the
\code{tspeed_jit} function, where a 'jitter' of random noise as inserted around the GPS fixes and then
the data bootstrapped to assess the effect on the trajectory speeds. A non-linear function can then be fitted
to assess the relationship in variance from the true trajectory speed, and can inform the trajectory speed
filter used in \code{clean_GPS}.

Of course it is quite simple just to increase the overall trajectory speed threshold used in \code{clean_GPS()}
to circumvent these issues, i.e. an animal travelling to the equator and back from the UK in five minutes or 10 seconds will
be flagged as erroneous if the speed threshold is much higher than the maximum speed of the animal. The
\code{tspeed_jit} function simply serves as a tool to understand the nature of the data.

The \code{tspeed_jit} makes use of \code{assign_rates} to bin rates into appropriate segments or cuts of the data.
These can be specified with a tolerance value (see assign_rates() for more details). Here a range of likely rates
are selected up to 10800 s. The \code{tspeed_jit} also recalculates 'gapsections' in the data, although these
are not strictly used at present so consider them deprecated for \code{tspeed_jit}.

Notes:

The variations we see in traj_speed over sampling rate will depend on the
behaviour of the bird, i.e. resting vs travelling, and if sampling rate is biased to a particular behaviour, this
should also be borne in mind.

The approach here is based on geographic coordinates, with a jitter the same in lat-long dimensions; of course
that will not hold across much of the globe so further improvements can be made using \code{sf}. Tests done at mid
latitudes (e.g. 52 deg N) suggest results are similar to UTMs. For very large datasets this code will run slowly. Consider this code therefore as in development
that will be look to be improved in the future.
}
\examples{

# testing a 0.0005 jitter ca 50 m around fixes, across a range of sampling rates
# this test was made on a dataset of Lesser Black-backed Gulls in southern England.

test = tspeed_jit(data_in, nsim = 50) # sample dataset used was 56 animals (2.5 million fixes), for 50 simulations

install.packages('drc')
library(drc)

# Fit an exponential decay model
model <- drm(value ~ rate, data = test, fct = EXD.3()) # Warning: obviously not accounting for pseudoreplication
summary(model)
plot(model)

}
